name: Build Domoticz

on:
  push:

#used for both X86 and qemu, require to rebuild the github packages via a manual workflow_dispatch
env:
  Vcmake: 3.26.3
  Vboost: 1.83.0
  IMAGE_NAME: "ghcr.io/${{ github.repository_owner }}/thesis_domoticz:${{ github.sha }}"

jobs:
  determine_version:
    runs-on: ubuntu-latest



  build:
    runs-on: ubuntu-latest

    steps:
    - name : Checkout
      # if: ${{ github.event_name != 'workflow_dispatch' }}
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: true
        repository: domoticz/domoticz-docker

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build image
      run: |
        chmod +x ./buildstable.sh
        build_cmd=`./buildstable.sh | tail -n 1 | sed 's/--tag\ domoticz\/domoticz:[a-z0-9A-Z\.]*//g'`
        bash -c "$build_cmd --tag ${{ env.IMAGE_NAME }}"
    - name: Generate SBOM
      uses: anchore/sbom-action@v0
      with:
        image: ${{ env.IMAGE_NAME }}
        format: cyclonedx-json
        output-file: sbom.json
    - name: save report as pipeline artifact
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: sbom.json
        path: sbom.json

    
  SCA:
    needs: build
    runs-on: 'ubuntu-latest'
    steps:
      - name: Download SBOM
        uses: actions/download-artifact@master
        with:
          name: sbom.json
          path: .
      - run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin v0.50.1
      - run: |
          trivy sbom sbom.json --format sarif --output sca_result.sarif
      - name: save report as pipeline artifact
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: sca_result.sarif
          path: sca_result.sarif

  DAST:
    needs: build
    runs-on: 'ubuntu-latest'
    steps:
      - run: 'echo tipa DAST'

        
        
