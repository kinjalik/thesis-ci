name: PR Inspection of Domoticz

on: pull_request

#used for both X86 and qemu, require to rebuild the github packages via a manual workflow_dispatch
env:
  IMAGE_NAME: "ghcr.io/${{ github.repository_owner }}/thesis_domoticz:${{ github.sha }}"

jobs:
  determine_version:
    runs-on: ubuntu-latest
    outputs:
      domoticz: ${{ steps.version.outputs.DOMOTICZ_VERSION }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 1
    - name: Read variables
      id: version
      run: |
        echo "DOMOTICZ_VERSION=$(jq -r '.domoticz' versions.json)" >> $GITHUB_OUTPUT

  build:
    runs-on: ubuntu-latest
    needs: [determine_version]

    steps:
    - name : Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 1
        submodules: true
        repository: domoticz/domoticz-docker

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build image
      run: |
        docker buildx create --name domoticz_build &&
        docker buildx use domoticz_build &&
        docker buildx inspect --bootstrap &&
        docker buildx build --push --no-cache \
                            --platform linux/arm/v7,linux/arm64,linux/amd64 \
                            --build-arg APP_VERSION=${{ needs.determine_version.outputs.domoticz }} \
                            --build-arg APP_HASH=${{ github.sha }} \
                            --build-arg "BUILD_DATE=$(date)" \
                            --tag ${{ env.IMAGE_NAME }} .
    - name: Generate SBOM
      uses: anchore/sbom-action@v0
      with:
        image: ${{ env.IMAGE_NAME }}
        format: cyclonedx-json
        output-file: sbom.json
    - name: save report as pipeline artifact
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: sbom.json
        path: sbom.json

    
  SCA:
    needs: build
    runs-on: 'ubuntu-latest'
    outputs:
      result_url: ${{ steps.sca_result.outputs.artifact-url }}
    steps:
      - name: Download SBOM
        uses: actions/download-artifact@master
        with:
          name: sbom.json
          path: .
      - run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin v0.50.1
      - run: |
          trivy sbom sbom.json --format sarif --output sca_result.sarif
      - name: save report as pipeline artifact
        uses: actions/upload-artifact@v4
        if: always()
        id: sca_result
        with:
          name: sca_result.sarif
          path: sca_result.sarif

  DAST:
    needs: build
    runs-on: 'ubuntu-latest'
    steps:
      - run: 'echo tipa DAST'

  inspection_comment:
    runs-on: ubuntu-latest
    needs:
    - SCA
    - DAST
    steps:
      - name: Find Comment
        uses: peter-evans/find-comment@v1
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: Results of Domoticz inspection
      - name: Post the result of inspection
        uses: peter-evans/create-or-update-comment@v4
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          edit-mode: replace
          body: |
            ### Results of Domoticz inspection
            **Please, familiarize yourself with them**

            - [SCA inspection result](${{ needs.SCA.outputs.result_url }})
            - [DAST inspection result]()