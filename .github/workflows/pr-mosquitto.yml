name: PR Inspection of Mosquitto

on: pull_request
# on: push

env:
  IMAGE_NAME: "ghcr.io/${{ github.repository_owner }}/thesis_mosquitto"
  IMAGE_TAG: "${{ github.sha }}"
  SBOM_FILENAME: sbom.json

permissions:
  contents: write
  pull-requests: write
  packages: write

jobs:
  fetch_code:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: ./.github/actions/get-version
      id: version

    - uses: actions/checkout@v4
      with:
        repository: eclipse/mosquitto
        ref: refs/tags/${{ steps.version.outputs.mosquitto }}
        fetch-depth: 1
    - uses: actions/upload-artifact@v4
      with:
        name: mosquitto_code
        path: ./*

  semgrep_sast:
    needs: ['fetch_code']
    runs-on: ubuntu-latest
    container:
      image: semgrep/semgrep
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@master
      with:
        name: mosquitto_code
        path: .
    - name: Scan with semgrep
      run: semgrep --config="p/c" --config="p/python" --error --sarif --output report.sarif --metrics=off
    - name: save report as pipeline artifact
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: mqtt_semgrep.sarif
        path: report.sarif
    
  snyk_sast:
    needs: ['fetch_code']
    runs-on: ubuntu-latest
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@master
      with:
        name: mosquitto_code
        path: .
    - name: fafa
      run: ls -lah
    - uses: snyk/actions/setup@master
    - name: Run Snyk to check for vulnerabilities
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      run: snyk code test --sarif-file-output=report.sarif || true
    - name: save report as pipeline artifact
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: mqtt_snyk.sarif
        path: report.sarif

  SAST_checkpoint:
    needs: 
    - semgrep_sast
    - snyk_sast
    - DAST
    runs-on: ubuntu-latest
    outputs:
      result_url: ${{ steps.sast_result.outputs.artifact-url }}
    steps:
      - name: Download semgrep report
        uses: actions/download-artifact@master
        with:
          name: mqtt_semgrep.sarif
          path: .
      - uses: geekyeggo/delete-artifact@v5
        with:
          name: mqtt_semgrep.sarig
      - name: Download snyk report
        uses: actions/download-artifact@master
        with:
          name: mqtt_snyk.sarif
          path: .
      - uses: geekyeggo/delete-artifact@v5
        with:
          name: mqtt_snyk.sarig
      - name: Merge SARIFs
        uses: microsoft/sarif-actions@v0.1
        with:
          command: 'merge . --recurse true --output-file=sast_report.sarif'
      - name: save report as pipeline artifact
        uses: actions/upload-artifact@v4
        if: always()
        id: sast_result
        with:
          name: mqtt_sast_report.sarif
          path: sast_report.sarif


  build:
    needs: [SAST_checkpoint]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/download-artifact@master
      with:
        name: mosquitto_code
        path: ./mosquitto
    - name: Build Mosquitto
      uses: ./.github/actions/build-mosquitto
      with:
        working-directory: ./mosquitto
        image_name: ${{ env.IMAGE_NAME }}
        image_tag: ${{ env.IMAGE_TAG }}
        sbom_filename: ${{ env.SBOM_FILENAME }}
        github-token: ${{ secrets.GITHUB_TOKEN }}

    - name: save report as pipeline artifact
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: SBOM
        path: mosquitto/${{ env.SBOM_FILENAME }}
        
  SCA:
    needs: build
    runs-on: 'ubuntu-latest'
    outputs:
      result_url: ${{ steps.sca_result.outputs.artifact-url }}
    steps:
      - uses: actions/checkout@v3
      - name: Download SBOM
        uses: actions/download-artifact@master
        with:
          name: SBOM
          path: .
      - uses: ./.github/actions/sca
        with:
          input_file: ${{ env.SBOM_FILENAME }}
          output_file: sca_result.sarif
      - name: save report as pipeline artifact
        uses: actions/upload-artifact@v4
        if: always()
        id: sca_result
        with:
          name: sca_result.sarif
          path: sca_result.sarif
  
  DAST:
    needs: fetch_code
    runs-on: 'ubuntu-latest'
    steps:
      - run: 'echo tipa DAST'

  inspection_comment:
    runs-on: ubuntu-latest
    needs:
    - SCA
    - SAST_checkpoint
    - DAST
    steps:
      - name: Find Comment
        uses: peter-evans/find-comment@v1
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: Results of Mosquitto inspection
      - name: Post the result of inspection
        uses: peter-evans/create-or-update-comment@v4
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          edit-mode: replace
          body: |
            ### Results of Mosquitto inspection
            **Please, familiarize yourself with them**

            - Docker image: `${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}`
            - [SAST inspection result](${{ needs.SAST_checkpoint.outputs.result_url }})
            - [SCA inspection result](${{ needs.SCA.outputs.result_url }})
            - [DAST inspection result]()